#!/usr/bin/python3

"""
Script for rsync file synchronisation between two machines
"""

import argparse # For arguments parsing
import sys # For exit()
import os # For environment and file tests
from subprocess import call

REMOTE = "TJ" # Remote machine (IP or hostname)
LIST_FILEPATH = os.environ.get("HOME")+"/.config/datasync/files" # Filepath for file list (to sync)
COOKIE_FILEPATH = os.environ.get("HOME")+"/.config/datasync/cookie" # Cookie filepath

def rsync_cmd():
    """
    Generates base (non-filepath args only) command line for rsync
    """

    cmd = ["rsync"]
    cmd.append("-rltv")
    cmd.append("--delete-after")
    return cmd

def cookie_check(way):
    """
    Checks cookie file
    Checks if current sync way (upload or download) is the same as the last one
    If it is, warn the user (may cause data loss if rsync is asked to delete obsolete files)
    Else, run and store sync way in cookie file
    """

    cookie_file = open(COOKIE_FILEPATH, "r")
    if cookie_file.read().split("\n")[0] == way:
        print("WARN: Same sync direction as last sync (remove ~/.config/datasync/cookie to force")
        sys.exit(1)
    else:
        cookie_file.close()
        cookie_file = open(COOKIE_FILEPATH, "w")
        cookie_file.write(way)

def sync(way, files):
    """
    Syncs files using the rsync command
    """

    for file in files:
        if file != '':
            cmd = rsync_cmd()
            if way == "down":
                cmd.append(REMOTE+':'+file)
            cmd.append(file)
            if way == "up":
                cmd.append(REMOTE+':'+file)
            call(cmd)

def main():
    """
    Main function. Parses arguments, reads file list, checks for cookie file presence
    and executes sync
    """

    # Set parser
    parser = argparse.ArgumentParser(description="Sync script")
    pgroup = parser.add_mutually_exclusive_group()
    pgroup.add_argument("-u", action="store_true", help="Sync (upload)")
    pgroup.add_argument("-d", action="store_true", help="Sync (download)")

    # Parse command line arguments
    args = parser.parse_args()

    # Open list of file to sync
    files = open(LIST_FILEPATH).read().split("\n")

    # If cookie file does not exist, create it
    if not os.path.isfile(COOKIE_FILEPATH):
        open(COOKIE_FILEPATH, "w").close()

    if args.u: # Upload sync (local machine to remote)
        cookie_check("up")
        sync("up", files)
    elif args.d: # Download sync (remote machine to local)
        cookie_check("down")
        sync("down", files)
    else: # No args, print help
        parser.print_help()
        sys.exit(1)

main()
